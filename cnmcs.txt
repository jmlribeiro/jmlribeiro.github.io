Non-malleable codes (NMCs) are ways of encoding messages that provide security guarantees even under strong adversarial tampering attacks (i.e., attacks where the adversary can modify the stored codeword in a quite general manner). Continuously non-malleable codes (CNMCs) are the strongest type of such codes studied so far -- they provide security guarantees even when an adversary is allowed to mount many serial (and adaptive) tampering attacks.

It is not hard to show that there are no NMCs and CNMCs secure against arbitrary tampering attacks. Therefore, we must impose some extra structure on the tampering attacks we wish to protect against. The most popular tampering model for NMCs and CNMCs is "split-state tampering". This corresponds to the scenario where the codeword is divide into s parts, which are stored in s physically isolated servers. Since the servers are far apart, we assume that different parts of the codeword can only be tampered independently (i.e., the outcome of the tampering attack on the i-th server does on the j-th part of the codeword, for j different than i).

Our understanding of CNMCs in the split-state tampering model is poor. We know that CNMCs for s=2 servers do not exist (https://eprint.iacr.org/2014/173). To complement that, we also know that *efficient* CNMCs exist for s=8 servers (https://eprint.iacr.org/2017/357). The goal of this thesis would be to explore the existence of CNMCs between s=3 and s=7 servers, without worrying about efficiency. In particular, I believe that it is not hard to improve on the 8-state construction above if we are willing to abandon efficiency.